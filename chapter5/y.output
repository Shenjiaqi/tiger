State 1 conflicts: 1 shift/reduce
State 15 conflicts: 12 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: decs dec
    3     | /* empty */

    4 dec: tydecs
    5    | vardec
    6    | fundecs

    7 fundecs: fundecs fundec
    8        | fundec

    9 tydecs: tydecs tydec
   10       | tydec

   11 tydec: TYPE type_id EQ ty

   12 ty: type_id
   13   | LBRACE tyfields RBRACE
   14   | ARRAY OF type_id

   15 tyfields: tyfields_opt
   16         | /* empty */

   17 tyfields_opt: tyfields_opt COMMA ID COLON type_id
   18             | ID COLON type_id

   19 vardec: VAR ID ASSIGN exp
   20       | VAR ID COLON type_id ASSIGN exp

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   22       | FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ exp

   23 lvalue: ID
   24       | lvalue DOT ID
   25       | ID LBRACK exp RBRACK
   26       | lvalue LBRACK exp RBRACK

   27 exp: expr

   28 expr: lvalue
   29     | novalue
   30     | NIL
   31     | seq
   32     | INT
   33     | STRING
   34     | expr PLUS expr
   35     | expr MINUS expr
   36     | expr TIMES expr
   37     | expr DIVIDE expr
   38     | expr EQ expr
   39     | expr NEQ expr
   40     | expr LT expr
   41     | expr LE expr
   42     | expr GT expr
   43     | expr GE expr
   44     | MINUS expr
   45     | expr AND expr
   46     | expr OR expr
   47     | paren
   48     | rec_crt
   49     | array_crt

   50 array_crt: ID LBRACK exp RBRACK OF exp

   51 rec_crt: ID LBRACE rec_list RBRACE

   52 rec_list: rec_list_opt
   53         | /* empty */

   54 rec_list_opt: rec_list_opt COMMA ID EQ exp
   55             | ID EQ exp

   56 paren: LPAREN exp RPAREN

   57 seq: LPAREN seq_list RPAREN

   58 type_id: ID

   59 novalue: func_call
   60        | LPAREN RPAREN
   61        | assignment
   62        | if_then
   63        | if_then_else
   64        | while_
   65        | break_
   66        | for_
   67        | let_

   68 func_call: ID LPAREN exp_list RPAREN

   69 exp_list: exp_list_opt
   70         | /* empty */

   71 exp_list_opt: exp_list_opt COMMA exp
   72             | exp

   73 assignment: lvalue ASSIGN exp

   74 if_then: IF exp THEN exp

   75 if_then_else: IF exp THEN exp ELSE exp

   76 while_: WHILE exp DO exp

   77 for_: FOR ID ASSIGN exp TO exp DO exp

   78 break_: BREAK

   79 let_: LET decs IN expseq END

   80 seq_list: seq_list_opt exp

   81 seq_list_opt: seq_list_opt exp SEMICOLON
   82             | exp SEMICOLON

   83 expseq: expseq_opt
   84       | /* empty */

   85 expseq_opt: expseq_opt SEMICOLON exp
   86           | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 17 18 19 20 21 22 23 24 25 50 51 54 55 58 68 77
STRING (259) 33
INT (260) 32
COMMA (261) 17 54 71
COLON (262) 17 18 20 22
SEMICOLON (263) 81 82 85
LPAREN (264) 21 22 56 57 60 68
RPAREN (265) 21 22 56 57 60 68
LBRACK (266) 25 26 50
RBRACK (267) 25 26 50
LBRACE (268) 13 51
RBRACE (269) 13 51
DOT (270) 24
PLUS (271) 34
MINUS (272) 35 44
TIMES (273) 36
DIVIDE (274) 37
EQ (275) 11 21 22 38 54 55
NEQ (276) 39
LT (277) 40
LE (278) 41
GT (279) 42
GE (280) 43
AND (281) 45
OR (282) 46
ASSIGN (283) 19 20 73 77
ARRAY (284) 14
IF (285) 74 75
THEN (286) 74 75
ELSE (287) 75
WHILE (288) 76
FOR (289) 77
TO (290) 77
DO (291) 76 77
LET (292) 79
IN (293) 79
END (294) 79
OF (295) 14 50
BREAK (296) 78
NIL (297) 30
FUNCTION (298) 21 22
VAR (299) 19 20
TYPE (300) 11
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
decs (49)
    on left: 2 3, on right: 2 79
dec (50)
    on left: 4 5 6, on right: 2
fundecs (51)
    on left: 7 8, on right: 6 7
tydecs (52)
    on left: 9 10, on right: 4 9
tydec (53)
    on left: 11, on right: 9 10
ty (54)
    on left: 12 13 14, on right: 11
tyfields (55)
    on left: 15 16, on right: 13 21 22
tyfields_opt (56)
    on left: 17 18, on right: 15 17
vardec (57)
    on left: 19 20, on right: 5
fundec (58)
    on left: 21 22, on right: 7 8
lvalue (59)
    on left: 23 24 25 26, on right: 24 26 28 73
exp (60)
    on left: 27, on right: 1 19 20 21 22 25 26 50 54 55 56 71 72 73
    74 75 76 77 80 81 82 85 86
expr (61)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49, on right: 27 34 35 36 37 38 39 40 41 42 43 44 45 46
array_crt (62)
    on left: 50, on right: 49
rec_crt (63)
    on left: 51, on right: 48
rec_list (64)
    on left: 52 53, on right: 51
rec_list_opt (65)
    on left: 54 55, on right: 52 54
paren (66)
    on left: 56, on right: 47
seq (67)
    on left: 57, on right: 31
type_id (68)
    on left: 58, on right: 11 12 14 17 18 20 22
novalue (69)
    on left: 59 60 61 62 63 64 65 66 67, on right: 29
func_call (70)
    on left: 68, on right: 59
exp_list (71)
    on left: 69 70, on right: 68
exp_list_opt (72)
    on left: 71 72, on right: 69 71
assignment (73)
    on left: 73, on right: 61
if_then (74)
    on left: 74, on right: 62
if_then_else (75)
    on left: 75, on right: 63
while_ (76)
    on left: 76, on right: 64
for_ (77)
    on left: 77, on right: 66
break_ (78)
    on left: 78, on right: 65
let_ (79)
    on left: 79, on right: 67
seq_list (80)
    on left: 80, on right: 57
seq_list_opt (81)
    on left: 81 82, on right: 80 81
expseq (82)
    on left: 83 84, on right: 79
expseq_opt (83)
    on left: 85 86, on right: 83 85


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program       go to state 12
    lvalue        go to state 13
    exp           go to state 14
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 1

   23 lvalue: ID .
   25       | ID . LBRACK exp RBRACK
   50 array_crt: ID . LBRACK exp RBRACK OF exp
   51 rec_crt: ID . LBRACE rec_list RBRACE
   68 func_call: ID . LPAREN exp_list RPAREN

    LPAREN  shift, and go to state 29
    LBRACK  shift, and go to state 30
    LBRACE  shift, and go to state 31

    LBRACK    [reduce using rule 23 (lvalue)]
    $default  reduce using rule 23 (lvalue)


state 2

   33 expr: STRING .

    $default  reduce using rule 33 (expr)


state 3

   32 expr: INT .

    $default  reduce using rule 32 (expr)


state 4

   56 paren: LPAREN . exp RPAREN
   57 seq: LPAREN . seq_list RPAREN
   60 novalue: LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 32
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 33
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28
    seq_list      go to state 34
    seq_list_opt  go to state 35


state 5

   44 expr: MINUS . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 36
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 6

   74 if_then: IF . exp THEN exp
   75 if_then_else: IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 37
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 7

   76 while_: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 38
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 8

   77 for_: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 39


state 9

   79 let_: LET . decs IN expseq END

    $default  reduce using rule 3 (decs)

    decs  go to state 40


state 10

   78 break_: BREAK .

    $default  reduce using rule 78 (break_)


state 11

   30 expr: NIL .

    $default  reduce using rule 30 (expr)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 41


state 13

   24 lvalue: lvalue . DOT ID
   26       | lvalue . LBRACK exp RBRACK
   28 expr: lvalue .
   73 assignment: lvalue . ASSIGN exp

    LBRACK  shift, and go to state 42
    DOT     shift, and go to state 43
    ASSIGN  shift, and go to state 44

    $default  reduce using rule 28 (expr)


state 14

    1 program: exp .

    $default  reduce using rule 1 (program)


state 15

   27 exp: expr .
   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


state 16

   49 expr: array_crt .

    $default  reduce using rule 49 (expr)


state 17

   48 expr: rec_crt .

    $default  reduce using rule 48 (expr)


state 18

   47 expr: paren .

    $default  reduce using rule 47 (expr)


state 19

   31 expr: seq .

    $default  reduce using rule 31 (expr)


state 20

   29 expr: novalue .

    $default  reduce using rule 29 (expr)


state 21

   59 novalue: func_call .

    $default  reduce using rule 59 (novalue)


state 22

   61 novalue: assignment .

    $default  reduce using rule 61 (novalue)


state 23

   62 novalue: if_then .

    $default  reduce using rule 62 (novalue)


state 24

   63 novalue: if_then_else .

    $default  reduce using rule 63 (novalue)


state 25

   64 novalue: while_ .

    $default  reduce using rule 64 (novalue)


state 26

   66 novalue: for_ .

    $default  reduce using rule 66 (novalue)


state 27

   65 novalue: break_ .

    $default  reduce using rule 65 (novalue)


state 28

   67 novalue: let_ .

    $default  reduce using rule 67 (novalue)


state 29

   68 func_call: ID LPAREN . exp_list RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (exp_list)

    lvalue        go to state 13
    exp           go to state 57
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    exp_list      go to state 58
    exp_list_opt  go to state 59
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 30

   25 lvalue: ID LBRACK . exp RBRACK
   50 array_crt: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 60
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 31

   51 rec_crt: ID LBRACE . rec_list RBRACE

    ID  shift, and go to state 61

    $default  reduce using rule 53 (rec_list)

    rec_list      go to state 62
    rec_list_opt  go to state 63


state 32

   60 novalue: LPAREN RPAREN .

    $default  reduce using rule 60 (novalue)


state 33

   56 paren: LPAREN exp . RPAREN
   82 seq_list_opt: exp . SEMICOLON

    SEMICOLON  shift, and go to state 64
    RPAREN     shift, and go to state 65


state 34

   57 seq: LPAREN seq_list . RPAREN

    RPAREN  shift, and go to state 66


state 35

   80 seq_list: seq_list_opt . exp
   81 seq_list_opt: seq_list_opt . exp SEMICOLON

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 67
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 36

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   44     | MINUS expr .
   45     | expr . AND expr
   46     | expr . OR expr

    $default  reduce using rule 44 (expr)


state 37

   74 if_then: IF exp . THEN exp
   75 if_then_else: IF exp . THEN exp ELSE exp

    THEN  shift, and go to state 68


state 38

   76 while_: WHILE exp . DO exp

    DO  shift, and go to state 69


state 39

   77 for_: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 70


state 40

    2 decs: decs . dec
   79 let_: LET decs . IN expseq END

    IN        shift, and go to state 71
    FUNCTION  shift, and go to state 72
    VAR       shift, and go to state 73
    TYPE      shift, and go to state 74

    dec      go to state 75
    fundecs  go to state 76
    tydecs   go to state 77
    tydec    go to state 78
    vardec   go to state 79
    fundec   go to state 80


state 41

    0 $accept: program $end .

    $default  accept


state 42

   26 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 81
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 43

   24 lvalue: lvalue DOT . ID

    ID  shift, and go to state 82


state 44

   73 assignment: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 83
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 45

   34 expr: expr PLUS . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 84
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 46

   35 expr: expr MINUS . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 85
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 47

   36 expr: expr TIMES . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 86
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 48

   37 expr: expr DIVIDE . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 87
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 49

   38 expr: expr EQ . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 88
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 50

   39 expr: expr NEQ . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 89
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 51

   40 expr: expr LT . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 90
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 52

   41 expr: expr LE . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 91
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 53

   42 expr: expr GT . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 92
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 54

   43 expr: expr GE . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 93
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 55

   45 expr: expr AND . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 94
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 56

   46 expr: expr OR . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 95
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 57

   72 exp_list_opt: exp .

    $default  reduce using rule 72 (exp_list_opt)


state 58

   68 func_call: ID LPAREN exp_list . RPAREN

    RPAREN  shift, and go to state 96


state 59

   69 exp_list: exp_list_opt .
   71 exp_list_opt: exp_list_opt . COMMA exp

    COMMA  shift, and go to state 97

    $default  reduce using rule 69 (exp_list)


state 60

   25 lvalue: ID LBRACK exp . RBRACK
   50 array_crt: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 98


state 61

   55 rec_list_opt: ID . EQ exp

    EQ  shift, and go to state 99


state 62

   51 rec_crt: ID LBRACE rec_list . RBRACE

    RBRACE  shift, and go to state 100


state 63

   52 rec_list: rec_list_opt .
   54 rec_list_opt: rec_list_opt . COMMA ID EQ exp

    COMMA  shift, and go to state 101

    $default  reduce using rule 52 (rec_list)


state 64

   82 seq_list_opt: exp SEMICOLON .

    $default  reduce using rule 82 (seq_list_opt)


state 65

   56 paren: LPAREN exp RPAREN .

    $default  reduce using rule 56 (paren)


state 66

   57 seq: LPAREN seq_list RPAREN .

    $default  reduce using rule 57 (seq)


state 67

   80 seq_list: seq_list_opt exp .
   81 seq_list_opt: seq_list_opt exp . SEMICOLON

    SEMICOLON  shift, and go to state 102

    $default  reduce using rule 80 (seq_list)


state 68

   74 if_then: IF exp THEN . exp
   75 if_then_else: IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 103
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 69

   76 while_: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 104
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 70

   77 for_: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 105
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 71

   79 let_: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 84 (expseq)

    lvalue        go to state 13
    exp           go to state 106
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28
    expseq        go to state 107
    expseq_opt    go to state 108


state 72

   21 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   22       | FUNCTION . ID LPAREN tyfields RPAREN COLON type_id EQ exp

    ID  shift, and go to state 109


state 73

   19 vardec: VAR . ID ASSIGN exp
   20       | VAR . ID COLON type_id ASSIGN exp

    ID  shift, and go to state 110


state 74

   11 tydec: TYPE . type_id EQ ty

    ID  shift, and go to state 111

    type_id  go to state 112


state 75

    2 decs: decs dec .

    $default  reduce using rule 2 (decs)


state 76

    6 dec: fundecs .
    7 fundecs: fundecs . fundec

    FUNCTION  shift, and go to state 72

    FUNCTION  [reduce using rule 6 (dec)]
    $default  reduce using rule 6 (dec)

    fundec  go to state 113


state 77

    4 dec: tydecs .
    9 tydecs: tydecs . tydec

    TYPE  shift, and go to state 74

    TYPE      [reduce using rule 4 (dec)]
    $default  reduce using rule 4 (dec)

    tydec  go to state 114


state 78

   10 tydecs: tydec .

    $default  reduce using rule 10 (tydecs)


state 79

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


state 80

    8 fundecs: fundec .

    $default  reduce using rule 8 (fundecs)


state 81

   26 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 115


state 82

   24 lvalue: lvalue DOT ID .

    $default  reduce using rule 24 (lvalue)


state 83

   73 assignment: lvalue ASSIGN exp .

    $default  reduce using rule 73 (assignment)


state 84

   34 expr: expr . PLUS expr
   34     | expr PLUS expr .
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 34 (expr)


state 85

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   35     | expr MINUS expr .
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 35 (expr)


state 86

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   36     | expr TIMES expr .
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    $default  reduce using rule 36 (expr)


state 87

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   37     | expr DIVIDE expr .
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    $default  reduce using rule 37 (expr)


state 88

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   38     | expr EQ expr .
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (expr)


state 89

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   39     | expr NEQ expr .
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (expr)


state 90

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   40     | expr LT expr .
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 40 (expr)


state 91

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   41     | expr LE expr .
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 41 (expr)


state 92

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   42     | expr GT expr .
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 42 (expr)


state 93

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   43     | expr GE expr .
   45     | expr . AND expr
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 43 (expr)


state 94

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   45     | expr AND expr .
   46     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54

    $default  reduce using rule 45 (expr)


state 95

   34 expr: expr . PLUS expr
   35     | expr . MINUS expr
   36     | expr . TIMES expr
   37     | expr . DIVIDE expr
   38     | expr . EQ expr
   39     | expr . NEQ expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . GT expr
   43     | expr . GE expr
   45     | expr . AND expr
   46     | expr . OR expr
   46     | expr OR expr .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55

    $default  reduce using rule 46 (expr)


state 96

   68 func_call: ID LPAREN exp_list RPAREN .

    $default  reduce using rule 68 (func_call)


state 97

   71 exp_list_opt: exp_list_opt COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 116
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 98

   25 lvalue: ID LBRACK exp RBRACK .
   50 array_crt: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 117

    $default  reduce using rule 25 (lvalue)


state 99

   55 rec_list_opt: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 118
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 100

   51 rec_crt: ID LBRACE rec_list RBRACE .

    $default  reduce using rule 51 (rec_crt)


state 101

   54 rec_list_opt: rec_list_opt COMMA . ID EQ exp

    ID  shift, and go to state 119


state 102

   81 seq_list_opt: seq_list_opt exp SEMICOLON .

    $default  reduce using rule 81 (seq_list_opt)


state 103

   74 if_then: IF exp THEN exp .
   75 if_then_else: IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 120

    ELSE      [reduce using rule 74 (if_then)]
    $default  reduce using rule 74 (if_then)


state 104

   76 while_: WHILE exp DO exp .

    $default  reduce using rule 76 (while_)


state 105

   77 for_: FOR ID ASSIGN exp . TO exp DO exp

    TO  shift, and go to state 121


state 106

   86 expseq_opt: exp .

    $default  reduce using rule 86 (expseq_opt)


state 107

   79 let_: LET decs IN expseq . END

    END  shift, and go to state 122


state 108

   83 expseq: expseq_opt .
   85 expseq_opt: expseq_opt . SEMICOLON exp

    SEMICOLON  shift, and go to state 123

    $default  reduce using rule 83 (expseq)


state 109

   21 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   22       | FUNCTION ID . LPAREN tyfields RPAREN COLON type_id EQ exp

    LPAREN  shift, and go to state 124


state 110

   19 vardec: VAR ID . ASSIGN exp
   20       | VAR ID . COLON type_id ASSIGN exp

    COLON   shift, and go to state 125
    ASSIGN  shift, and go to state 126


state 111

   58 type_id: ID .

    $default  reduce using rule 58 (type_id)


state 112

   11 tydec: TYPE type_id . EQ ty

    EQ  shift, and go to state 127


state 113

    7 fundecs: fundecs fundec .

    $default  reduce using rule 7 (fundecs)


state 114

    9 tydecs: tydecs tydec .

    $default  reduce using rule 9 (tydecs)


state 115

   26 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 26 (lvalue)


state 116

   71 exp_list_opt: exp_list_opt COMMA exp .

    $default  reduce using rule 71 (exp_list_opt)


state 117

   50 array_crt: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 128
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 118

   55 rec_list_opt: ID EQ exp .

    $default  reduce using rule 55 (rec_list_opt)


state 119

   54 rec_list_opt: rec_list_opt COMMA ID . EQ exp

    EQ  shift, and go to state 129


state 120

   75 if_then_else: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 130
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 121

   77 for_: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 131
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 122

   79 let_: LET decs IN expseq END .

    $default  reduce using rule 79 (let_)


state 123

   85 expseq_opt: expseq_opt SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 132
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 124

   21 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   22       | FUNCTION ID LPAREN . tyfields RPAREN COLON type_id EQ exp

    ID  shift, and go to state 133

    $default  reduce using rule 16 (tyfields)

    tyfields      go to state 134
    tyfields_opt  go to state 135


state 125

   20 vardec: VAR ID COLON . type_id ASSIGN exp

    ID  shift, and go to state 111

    type_id  go to state 136


state 126

   19 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 137
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 127

   11 tydec: TYPE type_id EQ . ty

    ID      shift, and go to state 111
    LBRACE  shift, and go to state 138
    ARRAY   shift, and go to state 139

    ty       go to state 140
    type_id  go to state 141


state 128

   50 array_crt: ID LBRACK exp RBRACK OF exp .

    $default  reduce using rule 50 (array_crt)


state 129

   54 rec_list_opt: rec_list_opt COMMA ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 142
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 130

   75 if_then_else: IF exp THEN exp ELSE exp .

    $default  reduce using rule 75 (if_then_else)


state 131

   77 for_: FOR ID ASSIGN exp TO exp . DO exp

    DO  shift, and go to state 143


state 132

   85 expseq_opt: expseq_opt SEMICOLON exp .

    $default  reduce using rule 85 (expseq_opt)


state 133

   18 tyfields_opt: ID . COLON type_id

    COLON  shift, and go to state 144


state 134

   21 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   22       | FUNCTION ID LPAREN tyfields . RPAREN COLON type_id EQ exp

    RPAREN  shift, and go to state 145


state 135

   15 tyfields: tyfields_opt .
   17 tyfields_opt: tyfields_opt . COMMA ID COLON type_id

    COMMA  shift, and go to state 146

    $default  reduce using rule 15 (tyfields)


state 136

   20 vardec: VAR ID COLON type_id . ASSIGN exp

    ASSIGN  shift, and go to state 147


state 137

   19 vardec: VAR ID ASSIGN exp .

    $default  reduce using rule 19 (vardec)


state 138

   13 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 133

    $default  reduce using rule 16 (tyfields)

    tyfields      go to state 148
    tyfields_opt  go to state 135


state 139

   14 ty: ARRAY . OF type_id

    OF  shift, and go to state 149


state 140

   11 tydec: TYPE type_id EQ ty .

    $default  reduce using rule 11 (tydec)


state 141

   12 ty: type_id .

    $default  reduce using rule 12 (ty)


state 142

   54 rec_list_opt: rec_list_opt COMMA ID EQ exp .

    $default  reduce using rule 54 (rec_list_opt)


state 143

   77 for_: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 150
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 144

   18 tyfields_opt: ID COLON . type_id

    ID  shift, and go to state 111

    type_id  go to state 151


state 145

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   22       | FUNCTION ID LPAREN tyfields RPAREN . COLON type_id EQ exp

    COLON  shift, and go to state 152
    EQ     shift, and go to state 153


state 146

   17 tyfields_opt: tyfields_opt COMMA . ID COLON type_id

    ID  shift, and go to state 154


state 147

   20 vardec: VAR ID COLON type_id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 155
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 148

   13 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 156


state 149

   14 ty: ARRAY OF . type_id

    ID  shift, and go to state 111

    type_id  go to state 157


state 150

   77 for_: FOR ID ASSIGN exp TO exp DO exp .

    $default  reduce using rule 77 (for_)


state 151

   18 tyfields_opt: ID COLON type_id .

    $default  reduce using rule 18 (tyfields_opt)


state 152

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . type_id EQ exp

    ID  shift, and go to state 111

    type_id  go to state 158


state 153

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 159
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 154

   17 tyfields_opt: tyfields_opt COMMA ID . COLON type_id

    COLON  shift, and go to state 160


state 155

   20 vardec: VAR ID COLON type_id ASSIGN exp .

    $default  reduce using rule 20 (vardec)


state 156

   13 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 13 (ty)


state 157

   14 ty: ARRAY OF type_id .

    $default  reduce using rule 14 (ty)


state 158

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON type_id . EQ exp

    EQ  shift, and go to state 161


state 159

   21 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    $default  reduce using rule 21 (fundec)


state 160

   17 tyfields_opt: tyfields_opt COMMA ID COLON . type_id

    ID  shift, and go to state 111

    type_id  go to state 162


state 161

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 163
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 162

   17 tyfields_opt: tyfields_opt COMMA ID COLON type_id .

    $default  reduce using rule 17 (tyfields_opt)


state 163

   22 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ exp .

    $default  reduce using rule 22 (fundec)
