State 1 conflicts: 1 shift/reduce
State 15 conflicts: 12 shift/reduce
State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: decs dec
    3     | /* empty */

    4 dec: tydec
    5    | vardec
    6    | fundec

    7 tydec: TYPE type_id EQ ty

    8 ty: type_id
    9   | LBRACE tyfields RBRACE
   10   | ARRAY OF type_id

   11 tyfields: tyfields_opt
   12         | /* empty */

   13 tyfields_opt: tyfields_opt COMMA ID COLON type_id
   14             | ID COLON type_id

   15 vardec: VAR ID ASSIGN exp
   16       | VAR ID COLON type_id ASSIGN exp

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ exp

   19 lvalue: ID
   20       | lvalue DOT ID
   21       | ID LBRACK exp RBRACK
   22       | lvalue LBRACK exp RBRACK

   23 exp: expr

   24 expr: lvalue
   25     | novalue
   26     | NIL
   27     | seq
   28     | INT
   29     | STRING
   30     | expr PLUS expr
   31     | expr MINUS expr
   32     | expr TIMES expr
   33     | expr DIVIDE expr
   34     | expr EQ expr
   35     | expr NEQ expr
   36     | expr LT expr
   37     | expr LE expr
   38     | expr GT expr
   39     | expr GE expr
   40     | expr AND expr
   41     | expr OR expr
   42     | paren
   43     | rec_crt
   44     | array_crt
   45     | MINUS expr

   46 array_crt: ID LBRACK exp RBRACK OF exp

   47 rec_crt: ID LBRACE rec_list RBRACE

   48 rec_list: rec_list_opt
   49         | /* empty */

   50 rec_list_opt: rec_list_opt COMMA ID EQ exp
   51             | ID EQ exp

   52 paren: LPAREN exp RPAREN

   53 seq: LPAREN seq_list RPAREN

   54 type_id: ID

   55 novalue: func_call
   56        | LPAREN RPAREN
   57        | assignment
   58        | if_then
   59        | if_then_else
   60        | while_
   61        | break_
   62        | for_
   63        | let_

   64 func_call: ID LPAREN exp_list RPAREN

   65 exp_list: exp_list_opt
   66         | /* empty */

   67 exp_list_opt: exp_list_opt COMMA exp
   68             | exp

   69 assignment: lvalue ASSIGN exp

   70 if_then: IF exp THEN exp

   71 if_then_else: IF exp THEN exp ELSE exp

   72 while_: WHILE exp DO exp

   73 for_: FOR ID ASSIGN exp TO exp DO exp

   74 break_: BREAK

   75 let_: LET decs IN expseq END

   76 seq_list: seq_list_opt exp

   77 seq_list_opt: seq_list_opt exp SEMICOLON
   78             | exp SEMICOLON

   79 expseq: expseq_opt
   80       | /* empty */

   81 expseq_opt: expseq_opt SEMICOLON exp
   82           | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 13 14 15 16 17 18 19 20 21 46 47 50 51 54 64 73
STRING (259) 29
INT (260) 28
COMMA (261) 13 50 67
COLON (262) 13 14 16 18
SEMICOLON (263) 77 78 81
LPAREN (264) 17 18 52 53 56 64
RPAREN (265) 17 18 52 53 56 64
LBRACK (266) 21 22 46
RBRACK (267) 21 22 46
LBRACE (268) 9 47
RBRACE (269) 9 47
DOT (270) 20
PLUS (271) 30
MINUS (272) 31 45
TIMES (273) 32
DIVIDE (274) 33
EQ (275) 7 17 18 34 50 51
NEQ (276) 35
LT (277) 36
LE (278) 37
GT (279) 38
GE (280) 39
AND (281) 40
OR (282) 41
ASSIGN (283) 15 16 69 73
ARRAY (284) 10
IF (285) 70 71
THEN (286) 70 71
ELSE (287) 71
WHILE (288) 72
FOR (289) 73
TO (290) 73
DO (291) 72 73
LET (292) 75
IN (293) 75
END (294) 75
OF (295) 10 46
BREAK (296) 74
NIL (297) 26
FUNCTION (298) 17 18
VAR (299) 15 16
TYPE (300) 7
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
decs (49)
    on left: 2 3, on right: 2 75
dec (50)
    on left: 4 5 6, on right: 2
tydec (51)
    on left: 7, on right: 4
ty (52)
    on left: 8 9 10, on right: 7
tyfields (53)
    on left: 11 12, on right: 9 17 18
tyfields_opt (54)
    on left: 13 14, on right: 11 13
vardec (55)
    on left: 15 16, on right: 5
fundec (56)
    on left: 17 18, on right: 6
lvalue (57)
    on left: 19 20 21 22, on right: 20 22 24 69
exp (58)
    on left: 23, on right: 1 15 16 17 18 21 22 46 50 51 52 67 68 69
    70 71 72 73 76 77 78 81 82
expr (59)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45, on right: 23 30 31 32 33 34 35 36 37 38 39 40 41 45
array_crt (60)
    on left: 46, on right: 44
rec_crt (61)
    on left: 47, on right: 43
rec_list (62)
    on left: 48 49, on right: 47
rec_list_opt (63)
    on left: 50 51, on right: 48 50
paren (64)
    on left: 52, on right: 42
seq (65)
    on left: 53, on right: 27
type_id (66)
    on left: 54, on right: 7 8 10 13 14 16 18
novalue (67)
    on left: 55 56 57 58 59 60 61 62 63, on right: 25
func_call (68)
    on left: 64, on right: 55
exp_list (69)
    on left: 65 66, on right: 64
exp_list_opt (70)
    on left: 67 68, on right: 65 67
assignment (71)
    on left: 69, on right: 57
if_then (72)
    on left: 70, on right: 58
if_then_else (73)
    on left: 71, on right: 59
while_ (74)
    on left: 72, on right: 60
for_ (75)
    on left: 73, on right: 62
break_ (76)
    on left: 74, on right: 61
let_ (77)
    on left: 75, on right: 63
seq_list (78)
    on left: 76, on right: 53
seq_list_opt (79)
    on left: 77 78, on right: 76 77
expseq (80)
    on left: 79 80, on right: 75
expseq_opt (81)
    on left: 81 82, on right: 79 81


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program       go to state 12
    lvalue        go to state 13
    exp           go to state 14
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 1

   19 lvalue: ID .
   21       | ID . LBRACK exp RBRACK
   46 array_crt: ID . LBRACK exp RBRACK OF exp
   47 rec_crt: ID . LBRACE rec_list RBRACE
   64 func_call: ID . LPAREN exp_list RPAREN

    LPAREN  shift, and go to state 29
    LBRACK  shift, and go to state 30
    LBRACE  shift, and go to state 31

    LBRACK    [reduce using rule 19 (lvalue)]
    $default  reduce using rule 19 (lvalue)


state 2

   29 expr: STRING .

    $default  reduce using rule 29 (expr)


state 3

   28 expr: INT .

    $default  reduce using rule 28 (expr)


state 4

   52 paren: LPAREN . exp RPAREN
   53 seq: LPAREN . seq_list RPAREN
   56 novalue: LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 32
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 33
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28
    seq_list      go to state 34
    seq_list_opt  go to state 35


state 5

   45 expr: MINUS . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 36
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 6

   70 if_then: IF . exp THEN exp
   71 if_then_else: IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 37
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 7

   72 while_: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 38
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 8

   73 for_: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 39


state 9

   75 let_: LET . decs IN expseq END

    $default  reduce using rule 3 (decs)

    decs  go to state 40


state 10

   74 break_: BREAK .

    $default  reduce using rule 74 (break_)


state 11

   26 expr: NIL .

    $default  reduce using rule 26 (expr)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 41


state 13

   20 lvalue: lvalue . DOT ID
   22       | lvalue . LBRACK exp RBRACK
   24 expr: lvalue .
   69 assignment: lvalue . ASSIGN exp

    LBRACK  shift, and go to state 42
    DOT     shift, and go to state 43
    ASSIGN  shift, and go to state 44

    $default  reduce using rule 24 (expr)


state 14

    1 program: exp .

    $default  reduce using rule 1 (program)


state 15

   23 exp: expr .
   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    PLUS      [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    LE        [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    GE        [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    OR        [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


state 16

   44 expr: array_crt .

    $default  reduce using rule 44 (expr)


state 17

   43 expr: rec_crt .

    $default  reduce using rule 43 (expr)


state 18

   42 expr: paren .

    $default  reduce using rule 42 (expr)


state 19

   27 expr: seq .

    $default  reduce using rule 27 (expr)


state 20

   25 expr: novalue .

    $default  reduce using rule 25 (expr)


state 21

   55 novalue: func_call .

    $default  reduce using rule 55 (novalue)


state 22

   57 novalue: assignment .

    $default  reduce using rule 57 (novalue)


state 23

   58 novalue: if_then .

    $default  reduce using rule 58 (novalue)


state 24

   59 novalue: if_then_else .

    $default  reduce using rule 59 (novalue)


state 25

   60 novalue: while_ .

    $default  reduce using rule 60 (novalue)


state 26

   62 novalue: for_ .

    $default  reduce using rule 62 (novalue)


state 27

   61 novalue: break_ .

    $default  reduce using rule 61 (novalue)


state 28

   63 novalue: let_ .

    $default  reduce using rule 63 (novalue)


state 29

   64 func_call: ID LPAREN . exp_list RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 66 (exp_list)

    lvalue        go to state 13
    exp           go to state 57
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    exp_list      go to state 58
    exp_list_opt  go to state 59
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 30

   21 lvalue: ID LBRACK . exp RBRACK
   46 array_crt: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 60
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 31

   47 rec_crt: ID LBRACE . rec_list RBRACE

    ID  shift, and go to state 61

    $default  reduce using rule 49 (rec_list)

    rec_list      go to state 62
    rec_list_opt  go to state 63


state 32

   56 novalue: LPAREN RPAREN .

    $default  reduce using rule 56 (novalue)


state 33

   52 paren: LPAREN exp . RPAREN
   78 seq_list_opt: exp . SEMICOLON

    SEMICOLON  shift, and go to state 64
    RPAREN     shift, and go to state 65


state 34

   53 seq: LPAREN seq_list . RPAREN

    RPAREN  shift, and go to state 66


state 35

   76 seq_list: seq_list_opt . exp
   77 seq_list_opt: seq_list_opt . exp SEMICOLON

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 67
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 36

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   45     | MINUS expr .

    $default  reduce using rule 45 (expr)


state 37

   70 if_then: IF exp . THEN exp
   71 if_then_else: IF exp . THEN exp ELSE exp

    THEN  shift, and go to state 68


state 38

   72 while_: WHILE exp . DO exp

    DO  shift, and go to state 69


state 39

   73 for_: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 70


state 40

    2 decs: decs . dec
   75 let_: LET decs . IN expseq END

    IN        shift, and go to state 71
    FUNCTION  shift, and go to state 72
    VAR       shift, and go to state 73
    TYPE      shift, and go to state 74

    dec     go to state 75
    tydec   go to state 76
    vardec  go to state 77
    fundec  go to state 78


state 41

    0 $accept: program $end .

    $default  accept


state 42

   22 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 79
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 43

   20 lvalue: lvalue DOT . ID

    ID  shift, and go to state 80


state 44

   69 assignment: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 81
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 45

   30 expr: expr PLUS . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 82
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 46

   31 expr: expr MINUS . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 83
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 47

   32 expr: expr TIMES . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 84
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 48

   33 expr: expr DIVIDE . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 85
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 49

   34 expr: expr EQ . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 86
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 50

   35 expr: expr NEQ . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 87
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 51

   36 expr: expr LT . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 88
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 52

   37 expr: expr LE . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 89
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 53

   38 expr: expr GT . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 90
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 54

   39 expr: expr GE . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 91
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 55

   40 expr: expr AND . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 92
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 56

   41 expr: expr OR . expr

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    expr          go to state 93
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 57

   68 exp_list_opt: exp .

    $default  reduce using rule 68 (exp_list_opt)


state 58

   64 func_call: ID LPAREN exp_list . RPAREN

    RPAREN  shift, and go to state 94


state 59

   65 exp_list: exp_list_opt .
   67 exp_list_opt: exp_list_opt . COMMA exp

    COMMA  shift, and go to state 95

    $default  reduce using rule 65 (exp_list)


state 60

   21 lvalue: ID LBRACK exp . RBRACK
   46 array_crt: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 96


state 61

   51 rec_list_opt: ID . EQ exp

    EQ  shift, and go to state 97


state 62

   47 rec_crt: ID LBRACE rec_list . RBRACE

    RBRACE  shift, and go to state 98


state 63

   48 rec_list: rec_list_opt .
   50 rec_list_opt: rec_list_opt . COMMA ID EQ exp

    COMMA  shift, and go to state 99

    $default  reduce using rule 48 (rec_list)


state 64

   78 seq_list_opt: exp SEMICOLON .

    $default  reduce using rule 78 (seq_list_opt)


state 65

   52 paren: LPAREN exp RPAREN .

    $default  reduce using rule 52 (paren)


state 66

   53 seq: LPAREN seq_list RPAREN .

    $default  reduce using rule 53 (seq)


state 67

   76 seq_list: seq_list_opt exp .
   77 seq_list_opt: seq_list_opt exp . SEMICOLON

    SEMICOLON  shift, and go to state 100

    $default  reduce using rule 76 (seq_list)


state 68

   70 if_then: IF exp THEN . exp
   71 if_then_else: IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 101
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 69

   72 while_: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 102
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 70

   73 for_: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 103
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 71

   75 let_: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 80 (expseq)

    lvalue        go to state 13
    exp           go to state 104
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28
    expseq        go to state 105
    expseq_opt    go to state 106


state 72

   17 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION . ID LPAREN tyfields RPAREN COLON type_id EQ exp

    ID  shift, and go to state 107


state 73

   15 vardec: VAR . ID ASSIGN exp
   16       | VAR . ID COLON type_id ASSIGN exp

    ID  shift, and go to state 108


state 74

    7 tydec: TYPE . type_id EQ ty

    ID  shift, and go to state 109

    type_id  go to state 110


state 75

    2 decs: decs dec .

    $default  reduce using rule 2 (decs)


state 76

    4 dec: tydec .

    $default  reduce using rule 4 (dec)


state 77

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


state 78

    6 dec: fundec .

    $default  reduce using rule 6 (dec)


state 79

   22 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 111


state 80

   20 lvalue: lvalue DOT ID .

    $default  reduce using rule 20 (lvalue)


state 81

   69 assignment: lvalue ASSIGN exp .

    $default  reduce using rule 69 (assignment)


state 82

   30 expr: expr . PLUS expr
   30     | expr PLUS expr .
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 30 (expr)


state 83

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   31     | expr MINUS expr .
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 31 (expr)


state 84

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   32     | expr TIMES expr .
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    $default  reduce using rule 32 (expr)


state 85

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   33     | expr DIVIDE expr .
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    $default  reduce using rule 33 (expr)


state 86

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   34     | expr EQ expr .
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (expr)


state 87

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   35     | expr NEQ expr .
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (expr)


state 88

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   36     | expr LT expr .
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (expr)


state 89

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   37     | expr LE expr .
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (expr)


state 90

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   38     | expr GT expr .
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (expr)


state 91

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   39     | expr GE expr .
   40     | expr . AND expr
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (expr)


state 92

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   40     | expr AND expr .
   41     | expr . OR expr

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54

    $default  reduce using rule 40 (expr)


state 93

   30 expr: expr . PLUS expr
   31     | expr . MINUS expr
   32     | expr . TIMES expr
   33     | expr . DIVIDE expr
   34     | expr . EQ expr
   35     | expr . NEQ expr
   36     | expr . LT expr
   37     | expr . LE expr
   38     | expr . GT expr
   39     | expr . GE expr
   40     | expr . AND expr
   41     | expr . OR expr
   41     | expr OR expr .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55

    $default  reduce using rule 41 (expr)


state 94

   64 func_call: ID LPAREN exp_list RPAREN .

    $default  reduce using rule 64 (func_call)


state 95

   67 exp_list_opt: exp_list_opt COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 112
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 96

   21 lvalue: ID LBRACK exp RBRACK .
   46 array_crt: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 113

    $default  reduce using rule 21 (lvalue)


state 97

   51 rec_list_opt: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 114
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 98

   47 rec_crt: ID LBRACE rec_list RBRACE .

    $default  reduce using rule 47 (rec_crt)


state 99

   50 rec_list_opt: rec_list_opt COMMA . ID EQ exp

    ID  shift, and go to state 115


state 100

   77 seq_list_opt: seq_list_opt exp SEMICOLON .

    $default  reduce using rule 77 (seq_list_opt)


state 101

   70 if_then: IF exp THEN exp .
   71 if_then_else: IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 116

    ELSE      [reduce using rule 70 (if_then)]
    $default  reduce using rule 70 (if_then)


state 102

   72 while_: WHILE exp DO exp .

    $default  reduce using rule 72 (while_)


state 103

   73 for_: FOR ID ASSIGN exp . TO exp DO exp

    TO  shift, and go to state 117


state 104

   82 expseq_opt: exp .

    $default  reduce using rule 82 (expseq_opt)


state 105

   75 let_: LET decs IN expseq . END

    END  shift, and go to state 118


state 106

   79 expseq: expseq_opt .
   81 expseq_opt: expseq_opt . SEMICOLON exp

    SEMICOLON  shift, and go to state 119

    $default  reduce using rule 79 (expseq)


state 107

   17 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION ID . LPAREN tyfields RPAREN COLON type_id EQ exp

    LPAREN  shift, and go to state 120


state 108

   15 vardec: VAR ID . ASSIGN exp
   16       | VAR ID . COLON type_id ASSIGN exp

    COLON   shift, and go to state 121
    ASSIGN  shift, and go to state 122


state 109

   54 type_id: ID .

    $default  reduce using rule 54 (type_id)


state 110

    7 tydec: TYPE type_id . EQ ty

    EQ  shift, and go to state 123


state 111

   22 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 22 (lvalue)


state 112

   67 exp_list_opt: exp_list_opt COMMA exp .

    $default  reduce using rule 67 (exp_list_opt)


state 113

   46 array_crt: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 124
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 114

   51 rec_list_opt: ID EQ exp .

    $default  reduce using rule 51 (rec_list_opt)


state 115

   50 rec_list_opt: rec_list_opt COMMA ID . EQ exp

    EQ  shift, and go to state 125


state 116

   71 if_then_else: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 126
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 117

   73 for_: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 127
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 118

   75 let_: LET decs IN expseq END .

    $default  reduce using rule 75 (let_)


state 119

   81 expseq_opt: expseq_opt SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 128
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 120

   17 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   18       | FUNCTION ID LPAREN . tyfields RPAREN COLON type_id EQ exp

    ID  shift, and go to state 129

    $default  reduce using rule 12 (tyfields)

    tyfields      go to state 130
    tyfields_opt  go to state 131


state 121

   16 vardec: VAR ID COLON . type_id ASSIGN exp

    ID  shift, and go to state 109

    type_id  go to state 132


state 122

   15 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 133
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 123

    7 tydec: TYPE type_id EQ . ty

    ID      shift, and go to state 109
    LBRACE  shift, and go to state 134
    ARRAY   shift, and go to state 135

    ty       go to state 136
    type_id  go to state 137


state 124

   46 array_crt: ID LBRACK exp RBRACK OF exp .

    $default  reduce using rule 46 (array_crt)


state 125

   50 rec_list_opt: rec_list_opt COMMA ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 138
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 126

   71 if_then_else: IF exp THEN exp ELSE exp .

    $default  reduce using rule 71 (if_then_else)


state 127

   73 for_: FOR ID ASSIGN exp TO exp . DO exp

    DO  shift, and go to state 139


state 128

   81 expseq_opt: expseq_opt SEMICOLON exp .

    $default  reduce using rule 81 (expseq_opt)


state 129

   14 tyfields_opt: ID . COLON type_id

    COLON  shift, and go to state 140


state 130

   17 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   18       | FUNCTION ID LPAREN tyfields . RPAREN COLON type_id EQ exp

    RPAREN  shift, and go to state 141


state 131

   11 tyfields: tyfields_opt .
   13 tyfields_opt: tyfields_opt . COMMA ID COLON type_id

    COMMA  shift, and go to state 142

    $default  reduce using rule 11 (tyfields)


state 132

   16 vardec: VAR ID COLON type_id . ASSIGN exp

    ASSIGN  shift, and go to state 143


state 133

   15 vardec: VAR ID ASSIGN exp .

    $default  reduce using rule 15 (vardec)


state 134

    9 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 129

    $default  reduce using rule 12 (tyfields)

    tyfields      go to state 144
    tyfields_opt  go to state 131


state 135

   10 ty: ARRAY . OF type_id

    OF  shift, and go to state 145


state 136

    7 tydec: TYPE type_id EQ ty .

    $default  reduce using rule 7 (tydec)


state 137

    8 ty: type_id .

    $default  reduce using rule 8 (ty)


state 138

   50 rec_list_opt: rec_list_opt COMMA ID EQ exp .

    $default  reduce using rule 50 (rec_list_opt)


state 139

   73 for_: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 146
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 140

   14 tyfields_opt: ID COLON . type_id

    ID  shift, and go to state 109

    type_id  go to state 147


state 141

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   18       | FUNCTION ID LPAREN tyfields RPAREN . COLON type_id EQ exp

    COLON  shift, and go to state 148
    EQ     shift, and go to state 149


state 142

   13 tyfields_opt: tyfields_opt COMMA . ID COLON type_id

    ID  shift, and go to state 150


state 143

   16 vardec: VAR ID COLON type_id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 151
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 144

    9 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 152


state 145

   10 ty: ARRAY OF . type_id

    ID  shift, and go to state 109

    type_id  go to state 153


state 146

   73 for_: FOR ID ASSIGN exp TO exp DO exp .

    $default  reduce using rule 73 (for_)


state 147

   14 tyfields_opt: ID COLON type_id .

    $default  reduce using rule 14 (tyfields_opt)


state 148

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . type_id EQ exp

    ID  shift, and go to state 109

    type_id  go to state 154


state 149

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 155
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 150

   13 tyfields_opt: tyfields_opt COMMA ID . COLON type_id

    COLON  shift, and go to state 156


state 151

   16 vardec: VAR ID COLON type_id ASSIGN exp .

    $default  reduce using rule 16 (vardec)


state 152

    9 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 9 (ty)


state 153

   10 ty: ARRAY OF type_id .

    $default  reduce using rule 10 (ty)


state 154

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON type_id . EQ exp

    EQ  shift, and go to state 157


state 155

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    $default  reduce using rule 17 (fundec)


state 156

   13 tyfields_opt: tyfields_opt COMMA ID COLON . type_id

    ID  shift, and go to state 109

    type_id  go to state 158


state 157

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue        go to state 13
    exp           go to state 159
    expr          go to state 15
    array_crt     go to state 16
    rec_crt       go to state 17
    paren         go to state 18
    seq           go to state 19
    novalue       go to state 20
    func_call     go to state 21
    assignment    go to state 22
    if_then       go to state 23
    if_then_else  go to state 24
    while_        go to state 25
    for_          go to state 26
    break_        go to state 27
    let_          go to state 28


state 158

   13 tyfields_opt: tyfields_opt COMMA ID COLON type_id .

    $default  reduce using rule 13 (tyfields_opt)


state 159

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON type_id EQ exp .

    $default  reduce using rule 18 (fundec)
